// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/nao1215/spare/app/domain/model"
	"github.com/nao1215/spare/app/external"
	"github.com/nao1215/spare/app/interactor"
	"github.com/nao1215/spare/app/usecase"
)

// Injectors from wire.go:

// NewSpare returns a new Spare struct.
func NewSpare(profile model.AWSProfile, region model.Region, endpoint *model.Endpoint) (*Spare, error) {
	s3BucketCreator := external.NewS3BucketCreator(profile, region, endpoint)
	s3BucketPublicAccessBlocker := external.NewS3BucketPublicAccessBlocker(profile, region, endpoint)
	s3BucketPolicySetter := external.NewS3BucketPolicySetter(profile, region, endpoint)
	storageCreatorOptions := &interactor.StorageCreatorOptions{
		BucketCreator:             s3BucketCreator,
		BucketPublicAccessBlocker: s3BucketPublicAccessBlocker,
		BucketPolicySetter:        s3BucketPolicySetter,
	}
	storageCreator := interactor.NewStorageCreator(storageCreatorOptions)
	cloudFrontCDNCreator := external.NewCloudFrontCDNCreator(profile, region, endpoint)
	cloudFrontOAICreator := external.NewCloudFrontOAICreator(profile, region, endpoint)
	cdnCreatorOptions := &interactor.CDNCreatorOptions{
		CDNCreator: cloudFrontCDNCreator,
		OAICreator: cloudFrontOAICreator,
	}
	cdnCreator := interactor.NewCDNCreator(cdnCreatorOptions)
	s3Uploader := external.NewS3Uploader(profile, region, endpoint)
	fileUploaderOptions := &interactor.FileUploaderOptions{
		FileUploader: s3Uploader,
	}
	fileUploader := interactor.NewFileUploader(fileUploaderOptions)
	spare := newSpare(storageCreator, cdnCreator, fileUploader)
	return spare, nil
}

// wire.go:

// Spare is a struct that contains the settings for the spare CLI command.
type Spare struct {
	// StorageCreator is an interface for creating external storage.
	StorageCreator usecase.StorageCreator
	// CDNCreator is an interface for creating CDN.
	CDNCreator usecase.CDNCreator
	// FileUploader is an interface for uploading files to external storage.
	FileUploader usecase.FileUploader
}

// newSpare returns a new Spare struct.
func newSpare(
	storageCreator usecase.StorageCreator,
	cdncreator usecase.CDNCreator,
	fileUploader usecase.FileUploader,
) *Spare {
	return &Spare{
		StorageCreator: storageCreator,
		CDNCreator:     cdncreator,
		FileUploader:   fileUploader,
	}
}
